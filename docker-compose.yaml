version: "3.9"
services:
  front:
    image: sermalenk/skypro-front:lesson_38
    ports:
      - "8080:80"
    depends_on:
      - api

  migrations:
    build: .
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate"
    volumes:
      - .:/code

  api:
    build: .
    env_file:
      - ./.env
    environment:
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
      DB_HOST: postgres
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code

  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres2"]
      interval: 5s
      timeout: 5s
      retries: 5

  telegram_bot:
    build: .
    environment:
      POSTGRES_HOST: postgres
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: >
      sh -c "python manage.py runbot"
    volumes:
      - .:/code

